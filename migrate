#!/usr/bin/env bash
# Written by Tyler Nijmeh (tytydraco @ GitHub)

# Destination repository or organization
DEST_REPO="https://github.com/Magisk-Modules-Alt-Repo"

usage() {
	echo -n "Usage: `basename $0` [OPTIONS] <REPO-USER> <REPO-NAME>
Options:
  -m			Mirror instead of clone (add cron workflow)
  -h			Show usage
"
}

while getopts ":dm" opt; do
	case $opt in
		m)
			MIRROR=1
			;;
		h)
			usage
			exit 0
			;;
		*)
			usage
			exit 1
			;;
	esac
done
shift $((OPTIND-1))

# Origin repo author
REPO_USER="$1"

# Origin repo name
REPO_NAME="$2"

# Log in red and exit
err() {
	echo -e "\e[91m[!] $@\e[39m"
	exit 1
}

# Log in white and continue
dbg() {
	echo -e "[*] $@"
}

# Check if a git repo exists
git_exists() {
	git ls-remote "$1" &> /dev/null
}

# Bail if origin username and repo name are unset
[[ -z "$REPO_USER" ]] || [[ -z "$REPO_NAME" ]] &&
	err "Invalid usage. Exiting."

# Bail if origin doesn't exist
git_exists "http://github.com/$REPO_USER/$REPO_NAME"
[[ $? -ne 0 ]] && err "$REPO_NAME does not exist on the $REPO_USER's repo. Exiting."

# Bail if destination already exists
git_exists "$DEST_REPO/$REPO_NAME"
[[ $? -eq 0 ]] && err "$REPO_NAME already exists on destination repo. Exiting."

# Bail if Git username and token are unset
[[ -z "$GIT_USER" ]] || [[ -z "$GIT_TOKEN" ]] &&
	err "Environmental variables GIT_USER and GIT_TOKEN must be set. Exiting."

# Destination repository or organization with authentication
DEST_REPO_AUTH="https://$GIT_USER:$GIT_TOKEN@github.com/Magisk-Modules-Alt-Repo"

# Fetch the description of the origin module
DESCRIPTION=`curl -s							\
	-u $GIT_USER:$GIT_TOKEN						\
	-H "Accept: application/vnd.github.v3+json"			\
	https://api.github.com/repos/$REPO_USER/$REPO_NAME | jq -r ".description"`

# Use no description rather than 'null'
[[ "$DESCRIPTION" == "null" ]] && DESCRIPTION=""

# Change description if we are a mirror repo
[[ "$MIRROR" -eq 1 ]] && DESCRIPTION="[Mirror] $DESCRIPTION"

# Create base repo on destination organization with [Mirror] descriptor
curl -s									\
	-u $GIT_USER:$GIT_TOKEN						\
	-X POST								\
	-H "Accept: application/vnd.github.v3+json"			\
	https://api.github.com/orgs/Magisk-Modules-Alt-Repo/repos	\
	-d '
{
	"name":"'"$REPO_NAME"'",
	"description":"'"$DESCRIPTION"'"
}'

sleep 5

# Bail if destination does not exist
git_exists "$DEST_REPO/$REPO_NAME"
[[ $? -ne 0 ]] && err "$REPO_NAME not found on destination repo. Exiting."

# Clone mirror repo
git clone --mirror "http://github.com/$REPO_USER/$REPO_NAME" base-repo

# Push as a mirror (preserves all objects)
git -C base-repo push --mirror "$DEST_REPO_AUTH/$REPO_NAME"

# Cleanup
rm -rf base-repo

# Add workflow if we are mirroring
if [[ "$MIRROR" -eq 1 ]]
then
	# Reclone as an actual repo
	git clone "$DEST_REPO/$REPO_NAME" base-repo-v2

	# Copy our workflow to auto-update the mirror
	cp -r extra/. base-repo-v2/

	# Commit
	git -C base-repo-v2 add .
	git -C base-repo-v2 commit -sam "AUTOMATED: Add automatic mirror fetching action"

	# Push
	git -C base-repo-v2 push "$DEST_REPO_AUTH/$REPO_NAME"

	# Cleanup
	rm -rf base-repo-v2
fi

dbg "Done. Migrated to $DEST_REPO/$REPO_NAME."
